#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nhom10_WebTraSua.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyTraSua")]
	public partial class QuanLyTraSuaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHITIETDONHANG(CHITIETDONHANG instance);
    partial void UpdateCHITIETDONHANG(CHITIETDONHANG instance);
    partial void DeleteCHITIETDONHANG(CHITIETDONHANG instance);
    partial void InsertDONHANG(DONHANG instance);
    partial void UpdateDONHANG(DONHANG instance);
    partial void DeleteDONHANG(DONHANG instance);
    partial void InsertDONHANGTOPPING(DONHANGTOPPING instance);
    partial void UpdateDONHANGTOPPING(DONHANGTOPPING instance);
    partial void DeleteDONHANGTOPPING(DONHANGTOPPING instance);
    partial void InsertGIOHANG(GIOHANG instance);
    partial void UpdateGIOHANG(GIOHANG instance);
    partial void DeleteGIOHANG(GIOHANG instance);
    partial void InsertKICHTHUOC(KICHTHUOC instance);
    partial void UpdateKICHTHUOC(KICHTHUOC instance);
    partial void DeleteKICHTHUOC(KICHTHUOC instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertKHUYENMAI(KHUYENMAI instance);
    partial void UpdateKHUYENMAI(KHUYENMAI instance);
    partial void DeleteKHUYENMAI(KHUYENMAI instance);
    partial void InsertLOAISANPHAM(LOAISANPHAM instance);
    partial void UpdateLOAISANPHAM(LOAISANPHAM instance);
    partial void DeleteLOAISANPHAM(LOAISANPHAM instance);
    partial void InsertNGUOIDUNG(NGUOIDUNG instance);
    partial void UpdateNGUOIDUNG(NGUOIDUNG instance);
    partial void DeleteNGUOIDUNG(NGUOIDUNG instance);
    partial void InsertPHANHOI(PHANHOI instance);
    partial void UpdatePHANHOI(PHANHOI instance);
    partial void DeletePHANHOI(PHANHOI instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertVAITRO(VAITRO instance);
    partial void UpdateVAITRO(VAITRO instance);
    partial void DeleteVAITRO(VAITRO instance);
    partial void InsertTOPPING(TOPPING instance);
    partial void UpdateTOPPING(TOPPING instance);
    partial void DeleteTOPPING(TOPPING instance);
    partial void InsertSANPHAMKICHTHUOC(SANPHAMKICHTHUOC instance);
    partial void UpdateSANPHAMKICHTHUOC(SANPHAMKICHTHUOC instance);
    partial void DeleteSANPHAMKICHTHUOC(SANPHAMKICHTHUOC instance);
    #endregion
		
		public QuanLyTraSuaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QuanLyTraSuaConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyTraSuaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyTraSuaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyTraSuaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyTraSuaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this.GetTable<CHITIETDONHANG>();
			}
		}
		
		public System.Data.Linq.Table<DONHANG> DONHANGs
		{
			get
			{
				return this.GetTable<DONHANG>();
			}
		}
		
		public System.Data.Linq.Table<DONHANGTOPPING> DONHANGTOPPINGs
		{
			get
			{
				return this.GetTable<DONHANGTOPPING>();
			}
		}
		
		public System.Data.Linq.Table<GIOHANG> GIOHANGs
		{
			get
			{
				return this.GetTable<GIOHANG>();
			}
		}
		
		public System.Data.Linq.Table<KICHTHUOC> KICHTHUOCs
		{
			get
			{
				return this.GetTable<KICHTHUOC>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHUYENMAI> KHUYENMAIs
		{
			get
			{
				return this.GetTable<KHUYENMAI>();
			}
		}
		
		public System.Data.Linq.Table<LOAISANPHAM> LOAISANPHAMs
		{
			get
			{
				return this.GetTable<LOAISANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this.GetTable<NGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<PHANHOI> PHANHOIs
		{
			get
			{
				return this.GetTable<PHANHOI>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<VAITRO> VAITROs
		{
			get
			{
				return this.GetTable<VAITRO>();
			}
		}
		
		public System.Data.Linq.Table<TOPPING> TOPPINGs
		{
			get
			{
				return this.GetTable<TOPPING>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAMKICHTHUOC> SANPHAMKICHTHUOCs
		{
			get
			{
				return this.GetTable<SANPHAMKICHTHUOC>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDONHANG")]
	public partial class CHITIETDONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADH;
		
		private int _MASP;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<double> _DONGIA;
		
		private EntityRef<DONHANG> _DONHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADHChanging(int value);
    partial void OnMADHChanged();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnDONGIAChanging(System.Nullable<double> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public CHITIETDONHANG()
		{
			this._DONHANG = default(EntityRef<DONHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MADH
		{
			get
			{
				return this._MADH;
			}
			set
			{
				if ((this._MADH != value))
				{
					if (this._DONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADHChanging(value);
					this.SendPropertyChanging();
					this._MADH = value;
					this.SendPropertyChanged("MADH");
					this.OnMADHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Float")]
		public System.Nullable<double> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CHITIETDONHANG", Storage="_DONHANG", ThisKey="MADH", OtherKey="MADH", IsForeignKey=true)]
		public DONHANG DONHANG
		{
			get
			{
				return this._DONHANG.Entity;
			}
			set
			{
				DONHANG previousValue = this._DONHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONHANG.Entity = null;
						previousValue.CHITIETDONHANGs.Remove(this);
					}
					this._DONHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONHANGs.Add(this);
						this._MADH = value.MADH;
					}
					else
					{
						this._MADH = default(int);
					}
					this.SendPropertyChanged("DONHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETDONHANG", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETDONHANGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONHANGs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONHANG")]
	public partial class DONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADH;
		
		private System.Nullable<int> _MAKH;
		
		private System.Nullable<int> _MAKM;
		
		private System.Nullable<System.DateTime> _NGAYDATHANG;
		
		private System.Nullable<System.DateTime> _NGAYGIAOHANG;
		
		private string _TRANGTHAI;
		
		private string _GHICHU;
		
		private EntitySet<CHITIETDONHANG> _CHITIETDONHANGs;
		
		private EntitySet<DONHANGTOPPING> _DONHANGTOPPINGs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<KHUYENMAI> _KHUYENMAI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADHChanging(int value);
    partial void OnMADHChanged();
    partial void OnMAKHChanging(System.Nullable<int> value);
    partial void OnMAKHChanged();
    partial void OnMAKMChanging(System.Nullable<int> value);
    partial void OnMAKMChanged();
    partial void OnNGAYDATHANGChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDATHANGChanged();
    partial void OnNGAYGIAOHANGChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYGIAOHANGChanged();
    partial void OnTRANGTHAIChanging(string value);
    partial void OnTRANGTHAIChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    #endregion
		
		public DONHANG()
		{
			this._CHITIETDONHANGs = new EntitySet<CHITIETDONHANG>(new Action<CHITIETDONHANG>(this.attach_CHITIETDONHANGs), new Action<CHITIETDONHANG>(this.detach_CHITIETDONHANGs));
			this._DONHANGTOPPINGs = new EntitySet<DONHANGTOPPING>(new Action<DONHANGTOPPING>(this.attach_DONHANGTOPPINGs), new Action<DONHANGTOPPING>(this.detach_DONHANGTOPPINGs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._KHUYENMAI = default(EntityRef<KHUYENMAI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MADH
		{
			get
			{
				return this._MADH;
			}
			set
			{
				if ((this._MADH != value))
				{
					this.OnMADHChanging(value);
					this.SendPropertyChanging();
					this._MADH = value;
					this.SendPropertyChanged("MADH");
					this.OnMADHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Int")]
		public System.Nullable<int> MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKM", DbType="Int")]
		public System.Nullable<int> MAKM
		{
			get
			{
				return this._MAKM;
			}
			set
			{
				if ((this._MAKM != value))
				{
					if (this._KHUYENMAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKMChanging(value);
					this.SendPropertyChanging();
					this._MAKM = value;
					this.SendPropertyChanged("MAKM");
					this.OnMAKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDATHANG", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYDATHANG
		{
			get
			{
				return this._NGAYDATHANG;
			}
			set
			{
				if ((this._NGAYDATHANG != value))
				{
					this.OnNGAYDATHANGChanging(value);
					this.SendPropertyChanging();
					this._NGAYDATHANG = value;
					this.SendPropertyChanged("NGAYDATHANG");
					this.OnNGAYDATHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGIAOHANG", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYGIAOHANG
		{
			get
			{
				return this._NGAYGIAOHANG;
			}
			set
			{
				if ((this._NGAYGIAOHANG != value))
				{
					this.OnNGAYGIAOHANGChanging(value);
					this.SendPropertyChanging();
					this._NGAYGIAOHANG = value;
					this.SendPropertyChanged("NGAYGIAOHANG");
					this.OnNGAYGIAOHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="NVarChar(50)")]
		public string TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(100)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CHITIETDONHANG", Storage="_CHITIETDONHANGs", ThisKey="MADH", OtherKey="MADH")]
		public EntitySet<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this._CHITIETDONHANGs;
			}
			set
			{
				this._CHITIETDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_DONHANGTOPPING", Storage="_DONHANGTOPPINGs", ThisKey="MADH", OtherKey="MADH")]
		public EntitySet<DONHANGTOPPING> DONHANGTOPPINGs
		{
			get
			{
				return this._DONHANGTOPPINGs;
			}
			set
			{
				this._DONHANGTOPPINGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONHANG", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_DONHANG", Storage="_KHUYENMAI", ThisKey="MAKM", OtherKey="MAKM", IsForeignKey=true)]
		public KHUYENMAI KHUYENMAI
		{
			get
			{
				return this._KHUYENMAI.Entity;
			}
			set
			{
				KHUYENMAI previousValue = this._KHUYENMAI.Entity;
				if (((previousValue != value) 
							|| (this._KHUYENMAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHUYENMAI.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._KHUYENMAI.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._MAKM = value.MAKM;
					}
					else
					{
						this._MAKM = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHUYENMAI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = this;
		}
		
		private void detach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = null;
		}
		
		private void attach_DONHANGTOPPINGs(DONHANGTOPPING entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = this;
		}
		
		private void detach_DONHANGTOPPINGs(DONHANGTOPPING entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONHANGTOPPING")]
	public partial class DONHANGTOPPING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MATOPPING;
		
		private int _MADH;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<DONHANG> _DONHANG;
		
		private EntityRef<TOPPING> _TOPPING;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATOPPINGChanging(int value);
    partial void OnMATOPPINGChanged();
    partial void OnMADHChanging(int value);
    partial void OnMADHChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public DONHANGTOPPING()
		{
			this._DONHANG = default(EntityRef<DONHANG>);
			this._TOPPING = default(EntityRef<TOPPING>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATOPPING", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MATOPPING
		{
			get
			{
				return this._MATOPPING;
			}
			set
			{
				if ((this._MATOPPING != value))
				{
					if (this._TOPPING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATOPPINGChanging(value);
					this.SendPropertyChanging();
					this._MATOPPING = value;
					this.SendPropertyChanged("MATOPPING");
					this.OnMATOPPINGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MADH
		{
			get
			{
				return this._MADH;
			}
			set
			{
				if ((this._MADH != value))
				{
					if (this._DONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADHChanging(value);
					this.SendPropertyChanging();
					this._MADH = value;
					this.SendPropertyChanged("MADH");
					this.OnMADHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_DONHANGTOPPING", Storage="_DONHANG", ThisKey="MADH", OtherKey="MADH", IsForeignKey=true)]
		public DONHANG DONHANG
		{
			get
			{
				return this._DONHANG.Entity;
			}
			set
			{
				DONHANG previousValue = this._DONHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONHANG.Entity = null;
						previousValue.DONHANGTOPPINGs.Remove(this);
					}
					this._DONHANG.Entity = value;
					if ((value != null))
					{
						value.DONHANGTOPPINGs.Add(this);
						this._MADH = value.MADH;
					}
					else
					{
						this._MADH = default(int);
					}
					this.SendPropertyChanged("DONHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOPPING_DONHANGTOPPING", Storage="_TOPPING", ThisKey="MATOPPING", OtherKey="MATOPPING", IsForeignKey=true)]
		public TOPPING TOPPING
		{
			get
			{
				return this._TOPPING.Entity;
			}
			set
			{
				TOPPING previousValue = this._TOPPING.Entity;
				if (((previousValue != value) 
							|| (this._TOPPING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOPPING.Entity = null;
						previousValue.DONHANGTOPPINGs.Remove(this);
					}
					this._TOPPING.Entity = value;
					if ((value != null))
					{
						value.DONHANGTOPPINGs.Add(this);
						this._MATOPPING = value.MATOPPING;
					}
					else
					{
						this._MATOPPING = default(int);
					}
					this.SendPropertyChanged("TOPPING");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIOHANG")]
	public partial class GIOHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAGH;
		
		private System.Nullable<int> _MASP;
		
		private System.Nullable<int> _MAKICHTHUOC;
		
		private System.Nullable<int> _MATOPPING;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<double> _GIA;
		
		private EntityRef<KICHTHUOC> _KICHTHUOC;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<TOPPING> _TOPPING;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAGHChanging(int value);
    partial void OnMAGHChanged();
    partial void OnMASPChanging(System.Nullable<int> value);
    partial void OnMASPChanged();
    partial void OnMAKICHTHUOCChanging(System.Nullable<int> value);
    partial void OnMAKICHTHUOCChanged();
    partial void OnMATOPPINGChanging(System.Nullable<int> value);
    partial void OnMATOPPINGChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnGIAChanging(System.Nullable<double> value);
    partial void OnGIAChanged();
    #endregion
		
		public GIOHANG()
		{
			this._KICHTHUOC = default(EntityRef<KICHTHUOC>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._TOPPING = default(EntityRef<TOPPING>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAGH
		{
			get
			{
				return this._MAGH;
			}
			set
			{
				if ((this._MAGH != value))
				{
					this.OnMAGHChanging(value);
					this.SendPropertyChanging();
					this._MAGH = value;
					this.SendPropertyChanged("MAGH");
					this.OnMAGHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Int")]
		public System.Nullable<int> MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKICHTHUOC", DbType="Int")]
		public System.Nullable<int> MAKICHTHUOC
		{
			get
			{
				return this._MAKICHTHUOC;
			}
			set
			{
				if ((this._MAKICHTHUOC != value))
				{
					if (this._KICHTHUOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKICHTHUOCChanging(value);
					this.SendPropertyChanging();
					this._MAKICHTHUOC = value;
					this.SendPropertyChanged("MAKICHTHUOC");
					this.OnMAKICHTHUOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATOPPING", DbType="Int")]
		public System.Nullable<int> MATOPPING
		{
			get
			{
				return this._MATOPPING;
			}
			set
			{
				if ((this._MATOPPING != value))
				{
					if (this._TOPPING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATOPPINGChanging(value);
					this.SendPropertyChanging();
					this._MATOPPING = value;
					this.SendPropertyChanged("MATOPPING");
					this.OnMATOPPINGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float")]
		public System.Nullable<double> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KICHTHUOC_GIOHANG", Storage="_KICHTHUOC", ThisKey="MAKICHTHUOC", OtherKey="MAKICHTHUOC", IsForeignKey=true)]
		public KICHTHUOC KICHTHUOC
		{
			get
			{
				return this._KICHTHUOC.Entity;
			}
			set
			{
				KICHTHUOC previousValue = this._KICHTHUOC.Entity;
				if (((previousValue != value) 
							|| (this._KICHTHUOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KICHTHUOC.Entity = null;
						previousValue.GIOHANGs.Remove(this);
					}
					this._KICHTHUOC.Entity = value;
					if ((value != null))
					{
						value.GIOHANGs.Add(this);
						this._MAKICHTHUOC = value.MAKICHTHUOC;
					}
					else
					{
						this._MAKICHTHUOC = default(Nullable<int>);
					}
					this.SendPropertyChanged("KICHTHUOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_GIOHANG", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.GIOHANGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.GIOHANGs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(Nullable<int>);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOPPING_GIOHANG", Storage="_TOPPING", ThisKey="MATOPPING", OtherKey="MATOPPING", IsForeignKey=true)]
		public TOPPING TOPPING
		{
			get
			{
				return this._TOPPING.Entity;
			}
			set
			{
				TOPPING previousValue = this._TOPPING.Entity;
				if (((previousValue != value) 
							|| (this._TOPPING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOPPING.Entity = null;
						previousValue.GIOHANGs.Remove(this);
					}
					this._TOPPING.Entity = value;
					if ((value != null))
					{
						value.GIOHANGs.Add(this);
						this._MATOPPING = value.MATOPPING;
					}
					else
					{
						this._MATOPPING = default(Nullable<int>);
					}
					this.SendPropertyChanged("TOPPING");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KICHTHUOC")]
	public partial class KICHTHUOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKICHTHUOC;
		
		private string _TENKICHTHUOC;
		
		private EntitySet<GIOHANG> _GIOHANGs;
		
		private EntitySet<SANPHAMKICHTHUOC> _SANPHAMKICHTHUOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKICHTHUOCChanging(int value);
    partial void OnMAKICHTHUOCChanged();
    partial void OnTENKICHTHUOCChanging(string value);
    partial void OnTENKICHTHUOCChanged();
    #endregion
		
		public KICHTHUOC()
		{
			this._GIOHANGs = new EntitySet<GIOHANG>(new Action<GIOHANG>(this.attach_GIOHANGs), new Action<GIOHANG>(this.detach_GIOHANGs));
			this._SANPHAMKICHTHUOCs = new EntitySet<SANPHAMKICHTHUOC>(new Action<SANPHAMKICHTHUOC>(this.attach_SANPHAMKICHTHUOCs), new Action<SANPHAMKICHTHUOC>(this.detach_SANPHAMKICHTHUOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKICHTHUOC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKICHTHUOC
		{
			get
			{
				return this._MAKICHTHUOC;
			}
			set
			{
				if ((this._MAKICHTHUOC != value))
				{
					this.OnMAKICHTHUOCChanging(value);
					this.SendPropertyChanging();
					this._MAKICHTHUOC = value;
					this.SendPropertyChanged("MAKICHTHUOC");
					this.OnMAKICHTHUOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKICHTHUOC", DbType="NVarChar(100)")]
		public string TENKICHTHUOC
		{
			get
			{
				return this._TENKICHTHUOC;
			}
			set
			{
				if ((this._TENKICHTHUOC != value))
				{
					this.OnTENKICHTHUOCChanging(value);
					this.SendPropertyChanging();
					this._TENKICHTHUOC = value;
					this.SendPropertyChanged("TENKICHTHUOC");
					this.OnTENKICHTHUOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KICHTHUOC_GIOHANG", Storage="_GIOHANGs", ThisKey="MAKICHTHUOC", OtherKey="MAKICHTHUOC")]
		public EntitySet<GIOHANG> GIOHANGs
		{
			get
			{
				return this._GIOHANGs;
			}
			set
			{
				this._GIOHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KICHTHUOC_SANPHAMKICHTHUOC", Storage="_SANPHAMKICHTHUOCs", ThisKey="MAKICHTHUOC", OtherKey="MAKICHTHUOC")]
		public EntitySet<SANPHAMKICHTHUOC> SANPHAMKICHTHUOCs
		{
			get
			{
				return this._SANPHAMKICHTHUOCs;
			}
			set
			{
				this._SANPHAMKICHTHUOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIOHANGs(GIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.KICHTHUOC = this;
		}
		
		private void detach_GIOHANGs(GIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.KICHTHUOC = null;
		}
		
		private void attach_SANPHAMKICHTHUOCs(SANPHAMKICHTHUOC entity)
		{
			this.SendPropertyChanging();
			entity.KICHTHUOC = this;
		}
		
		private void detach_SANPHAMKICHTHUOCs(SANPHAMKICHTHUOC entity)
		{
			this.SendPropertyChanging();
			entity.KICHTHUOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKH;
		
		private System.Nullable<int> _MAND;
		
		private string _TENKH;
		
		private EntitySet<DONHANG> _DONHANGs;
		
		private EntityRef<NGUOIDUNG> _NGUOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(int value);
    partial void OnMAKHChanged();
    partial void OnMANDChanging(System.Nullable<int> value);
    partial void OnMANDChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			this._NGUOIDUNG = default(EntityRef<NGUOIDUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAND", DbType="Int")]
		public System.Nullable<int> MAND
		{
			get
			{
				return this._MAND;
			}
			set
			{
				if ((this._MAND != value))
				{
					if (this._NGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANDChanging(value);
					this.SendPropertyChanging();
					this._MAND = value;
					this.SendPropertyChanged("MAND");
					this.OnMANDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(100)")]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONHANG", Storage="_DONHANGs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_KHACHHANG", Storage="_NGUOIDUNG", ThisKey="MAND", OtherKey="MAND", IsForeignKey=true)]
		public NGUOIDUNG NGUOIDUNG
		{
			get
			{
				return this._NGUOIDUNG.Entity;
			}
			set
			{
				NGUOIDUNG previousValue = this._NGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOIDUNG.Entity = null;
						previousValue.KHACHHANGs.Remove(this);
					}
					this._NGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.KHACHHANGs.Add(this);
						this._MAND = value.MAND;
					}
					else
					{
						this._MAND = default(Nullable<int>);
					}
					this.SendPropertyChanged("NGUOIDUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHUYENMAI")]
	public partial class KHUYENMAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKM;
		
		private string _MOTA;
		
		private System.Nullable<double> _PHANTRAMGIAM;
		
		private System.Nullable<System.DateTime> _NGAYBATDAU;
		
		private System.Nullable<System.DateTime> _NGAYKETTHUC;
		
		private EntitySet<DONHANG> _DONHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKMChanging(int value);
    partial void OnMAKMChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnPHANTRAMGIAMChanging(System.Nullable<double> value);
    partial void OnPHANTRAMGIAMChanged();
    partial void OnNGAYBATDAUChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYBATDAUChanged();
    partial void OnNGAYKETTHUCChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYKETTHUCChanged();
    #endregion
		
		public KHUYENMAI()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKM", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKM
		{
			get
			{
				return this._MAKM;
			}
			set
			{
				if ((this._MAKM != value))
				{
					this.OnMAKMChanging(value);
					this.SendPropertyChanging();
					this._MAKM = value;
					this.SendPropertyChanged("MAKM");
					this.OnMAKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(100)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHANTRAMGIAM", DbType="Float")]
		public System.Nullable<double> PHANTRAMGIAM
		{
			get
			{
				return this._PHANTRAMGIAM;
			}
			set
			{
				if ((this._PHANTRAMGIAM != value))
				{
					this.OnPHANTRAMGIAMChanging(value);
					this.SendPropertyChanging();
					this._PHANTRAMGIAM = value;
					this.SendPropertyChanged("PHANTRAMGIAM");
					this.OnPHANTRAMGIAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYBATDAU", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYBATDAU
		{
			get
			{
				return this._NGAYBATDAU;
			}
			set
			{
				if ((this._NGAYBATDAU != value))
				{
					this.OnNGAYBATDAUChanging(value);
					this.SendPropertyChanging();
					this._NGAYBATDAU = value;
					this.SendPropertyChanged("NGAYBATDAU");
					this.OnNGAYBATDAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYKETTHUC", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYKETTHUC
		{
			get
			{
				return this._NGAYKETTHUC;
			}
			set
			{
				if ((this._NGAYKETTHUC != value))
				{
					this.OnNGAYKETTHUCChanging(value);
					this.SendPropertyChanging();
					this._NGAYKETTHUC = value;
					this.SendPropertyChanged("NGAYKETTHUC");
					this.OnNGAYKETTHUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_DONHANG", Storage="_DONHANGs", ThisKey="MAKM", OtherKey="MAKM")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISANPHAM")]
	public partial class LOAISANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALOAI;
		
		private string _TENLOAI;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIChanging(int value);
    partial void OnMALOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAISANPHAM()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(500)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_SANPHAM", Storage="_SANPHAMs", ThisKey="MALOAI", OtherKey="MALOAI")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUOIDUNG")]
	public partial class NGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAND;
		
		private string _TENDANGNHAP;
		
		private string _MATKHAU;
		
		private string _HINHANH;
		
		private string _SDT;
		
		private string _EMAIL;
		
		private System.Nullable<System.DateTime> _NGSINH;
		
		private string _DIACHI;
		
		private System.Nullable<int> _MAVAITRO;
		
		private EntitySet<KHACHHANG> _KHACHHANGs;
		
		private EntityRef<VAITRO> _VAITRO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANDChanging(int value);
    partial void OnMANDChanged();
    partial void OnTENDANGNHAPChanging(string value);
    partial void OnTENDANGNHAPChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnNGSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGSINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnMAVAITROChanging(System.Nullable<int> value);
    partial void OnMAVAITROChanged();
    #endregion
		
		public NGUOIDUNG()
		{
			this._KHACHHANGs = new EntitySet<KHACHHANG>(new Action<KHACHHANG>(this.attach_KHACHHANGs), new Action<KHACHHANG>(this.detach_KHACHHANGs));
			this._VAITRO = default(EntityRef<VAITRO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAND", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAND
		{
			get
			{
				return this._MAND;
			}
			set
			{
				if ((this._MAND != value))
				{
					this.OnMANDChanging(value);
					this.SendPropertyChanging();
					this._MAND = value;
					this.SendPropertyChanged("MAND");
					this.OnMANDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDANGNHAP", DbType="NVarChar(100)")]
		public string TENDANGNHAP
		{
			get
			{
				return this._TENDANGNHAP;
			}
			set
			{
				if ((this._TENDANGNHAP != value))
				{
					this.OnTENDANGNHAPChanging(value);
					this.SendPropertyChanging();
					this._TENDANGNHAP = value;
					this.SendPropertyChanged("TENDANGNHAP");
					this.OnTENDANGNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="Char(100)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="Char(100)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="Char(100)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGSINH
		{
			get
			{
				return this._NGSINH;
			}
			set
			{
				if ((this._NGSINH != value))
				{
					this.OnNGSINHChanging(value);
					this.SendPropertyChanging();
					this._NGSINH = value;
					this.SendPropertyChanged("NGSINH");
					this.OnNGSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAVAITRO", DbType="Int")]
		public System.Nullable<int> MAVAITRO
		{
			get
			{
				return this._MAVAITRO;
			}
			set
			{
				if ((this._MAVAITRO != value))
				{
					if (this._VAITRO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAVAITROChanging(value);
					this.SendPropertyChanging();
					this._MAVAITRO = value;
					this.SendPropertyChanged("MAVAITRO");
					this.OnMAVAITROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_KHACHHANG", Storage="_KHACHHANGs", ThisKey="MAND", OtherKey="MAND")]
		public EntitySet<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this._KHACHHANGs;
			}
			set
			{
				this._KHACHHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VAITRO_NGUOIDUNG", Storage="_VAITRO", ThisKey="MAVAITRO", OtherKey="MAVAITRO", IsForeignKey=true)]
		public VAITRO VAITRO
		{
			get
			{
				return this._VAITRO.Entity;
			}
			set
			{
				VAITRO previousValue = this._VAITRO.Entity;
				if (((previousValue != value) 
							|| (this._VAITRO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VAITRO.Entity = null;
						previousValue.NGUOIDUNGs.Remove(this);
					}
					this._VAITRO.Entity = value;
					if ((value != null))
					{
						value.NGUOIDUNGs.Add(this);
						this._MAVAITRO = value.MAVAITRO;
					}
					else
					{
						this._MAVAITRO = default(Nullable<int>);
					}
					this.SendPropertyChanged("VAITRO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = this;
		}
		
		private void detach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANHOI")]
	public partial class PHANHOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPHANHOI;
		
		private string _HOVATEN;
		
		private string _EMAIL;
		
		private string _NOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHANHOIChanging(int value);
    partial void OnMAPHANHOIChanged();
    partial void OnHOVATENChanging(string value);
    partial void OnHOVATENChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    #endregion
		
		public PHANHOI()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHANHOI", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAPHANHOI
		{
			get
			{
				return this._MAPHANHOI;
			}
			set
			{
				if ((this._MAPHANHOI != value))
				{
					this.OnMAPHANHOIChanging(value);
					this.SendPropertyChanging();
					this._MAPHANHOI = value;
					this.SendPropertyChanged("MAPHANHOI");
					this.OnMAPHANHOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOVATEN", DbType="NVarChar(500)")]
		public string HOVATEN
		{
			get
			{
				return this._HOVATEN;
			}
			set
			{
				if ((this._HOVATEN != value))
				{
					this.OnHOVATENChanging(value);
					this.SendPropertyChanging();
					this._HOVATEN = value;
					this.SendPropertyChanged("HOVATEN");
					this.OnHOVATENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(500)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(500)")]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MASP;
		
		private string _TENSP;
		
		private string _MOTA;
		
		private System.Nullable<double> _GIA;
		
		private string _HINHANH;
		
		private System.Nullable<int> _MALOAI;
		
		private EntitySet<CHITIETDONHANG> _CHITIETDONHANGs;
		
		private EntitySet<GIOHANG> _GIOHANGs;
		
		private EntitySet<SANPHAMKICHTHUOC> _SANPHAMKICHTHUOCs;
		
		private EntityRef<LOAISANPHAM> _LOAISANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnGIAChanging(System.Nullable<double> value);
    partial void OnGIAChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    partial void OnMALOAIChanging(System.Nullable<int> value);
    partial void OnMALOAIChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CHITIETDONHANGs = new EntitySet<CHITIETDONHANG>(new Action<CHITIETDONHANG>(this.attach_CHITIETDONHANGs), new Action<CHITIETDONHANG>(this.detach_CHITIETDONHANGs));
			this._GIOHANGs = new EntitySet<GIOHANG>(new Action<GIOHANG>(this.attach_GIOHANGs), new Action<GIOHANG>(this.detach_GIOHANGs));
			this._SANPHAMKICHTHUOCs = new EntitySet<SANPHAMKICHTHUOC>(new Action<SANPHAMKICHTHUOC>(this.attach_SANPHAMKICHTHUOCs), new Action<SANPHAMKICHTHUOC>(this.detach_SANPHAMKICHTHUOCs));
			this._LOAISANPHAM = default(EntityRef<LOAISANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NVarChar(100)")]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(500)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float")]
		public System.Nullable<double> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="Char(100)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Int")]
		public System.Nullable<int> MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					if (this._LOAISANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETDONHANG", Storage="_CHITIETDONHANGs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this._CHITIETDONHANGs;
			}
			set
			{
				this._CHITIETDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_GIOHANG", Storage="_GIOHANGs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<GIOHANG> GIOHANGs
		{
			get
			{
				return this._GIOHANGs;
			}
			set
			{
				this._GIOHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_SANPHAMKICHTHUOC", Storage="_SANPHAMKICHTHUOCs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<SANPHAMKICHTHUOC> SANPHAMKICHTHUOCs
		{
			get
			{
				return this._SANPHAMKICHTHUOCs;
			}
			set
			{
				this._SANPHAMKICHTHUOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_SANPHAM", Storage="_LOAISANPHAM", ThisKey="MALOAI", OtherKey="MALOAI", IsForeignKey=true)]
		public LOAISANPHAM LOAISANPHAM
		{
			get
			{
				return this._LOAISANPHAM.Entity;
			}
			set
			{
				LOAISANPHAM previousValue = this._LOAISANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._LOAISANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISANPHAM.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._LOAISANPHAM.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MALOAI = value.MALOAI;
					}
					else
					{
						this._MALOAI = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAISANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_GIOHANGs(GIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_GIOHANGs(GIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_SANPHAMKICHTHUOCs(SANPHAMKICHTHUOC entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_SANPHAMKICHTHUOCs(SANPHAMKICHTHUOC entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VAITRO")]
	public partial class VAITRO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAVAITRO;
		
		private string _TENVAITRO;
		
		private EntitySet<NGUOIDUNG> _NGUOIDUNGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAVAITROChanging(int value);
    partial void OnMAVAITROChanged();
    partial void OnTENVAITROChanging(string value);
    partial void OnTENVAITROChanged();
    #endregion
		
		public VAITRO()
		{
			this._NGUOIDUNGs = new EntitySet<NGUOIDUNG>(new Action<NGUOIDUNG>(this.attach_NGUOIDUNGs), new Action<NGUOIDUNG>(this.detach_NGUOIDUNGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAVAITRO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAVAITRO
		{
			get
			{
				return this._MAVAITRO;
			}
			set
			{
				if ((this._MAVAITRO != value))
				{
					this.OnMAVAITROChanging(value);
					this.SendPropertyChanging();
					this._MAVAITRO = value;
					this.SendPropertyChanged("MAVAITRO");
					this.OnMAVAITROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENVAITRO", DbType="NVarChar(50)")]
		public string TENVAITRO
		{
			get
			{
				return this._TENVAITRO;
			}
			set
			{
				if ((this._TENVAITRO != value))
				{
					this.OnTENVAITROChanging(value);
					this.SendPropertyChanging();
					this._TENVAITRO = value;
					this.SendPropertyChanged("TENVAITRO");
					this.OnTENVAITROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VAITRO_NGUOIDUNG", Storage="_NGUOIDUNGs", ThisKey="MAVAITRO", OtherKey="MAVAITRO")]
		public EntitySet<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this._NGUOIDUNGs;
			}
			set
			{
				this._NGUOIDUNGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.VAITRO = this;
		}
		
		private void detach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.VAITRO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TOPPING")]
	public partial class TOPPING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MATOPPING;
		
		private string _TEN;
		
		private System.Nullable<double> _GIA;
		
		private string _HINHANH;
		
		private EntitySet<DONHANGTOPPING> _DONHANGTOPPINGs;
		
		private EntitySet<GIOHANG> _GIOHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATOPPINGChanging(int value);
    partial void OnMATOPPINGChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnGIAChanging(System.Nullable<double> value);
    partial void OnGIAChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    #endregion
		
		public TOPPING()
		{
			this._DONHANGTOPPINGs = new EntitySet<DONHANGTOPPING>(new Action<DONHANGTOPPING>(this.attach_DONHANGTOPPINGs), new Action<DONHANGTOPPING>(this.detach_DONHANGTOPPINGs));
			this._GIOHANGs = new EntitySet<GIOHANG>(new Action<GIOHANG>(this.attach_GIOHANGs), new Action<GIOHANG>(this.detach_GIOHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATOPPING", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MATOPPING
		{
			get
			{
				return this._MATOPPING;
			}
			set
			{
				if ((this._MATOPPING != value))
				{
					this.OnMATOPPINGChanging(value);
					this.SendPropertyChanging();
					this._MATOPPING = value;
					this.SendPropertyChanged("MATOPPING");
					this.OnMATOPPINGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(100)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float")]
		public System.Nullable<double> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="Char(100)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOPPING_DONHANGTOPPING", Storage="_DONHANGTOPPINGs", ThisKey="MATOPPING", OtherKey="MATOPPING")]
		public EntitySet<DONHANGTOPPING> DONHANGTOPPINGs
		{
			get
			{
				return this._DONHANGTOPPINGs;
			}
			set
			{
				this._DONHANGTOPPINGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOPPING_GIOHANG", Storage="_GIOHANGs", ThisKey="MATOPPING", OtherKey="MATOPPING")]
		public EntitySet<GIOHANG> GIOHANGs
		{
			get
			{
				return this._GIOHANGs;
			}
			set
			{
				this._GIOHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGTOPPINGs(DONHANGTOPPING entity)
		{
			this.SendPropertyChanging();
			entity.TOPPING = this;
		}
		
		private void detach_DONHANGTOPPINGs(DONHANGTOPPING entity)
		{
			this.SendPropertyChanging();
			entity.TOPPING = null;
		}
		
		private void attach_GIOHANGs(GIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.TOPPING = this;
		}
		
		private void detach_GIOHANGs(GIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.TOPPING = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAMKICHTHUOC")]
	public partial class SANPHAMKICHTHUOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MASP;
		
		private int _MAKICHTHUOC;
		
		private System.Nullable<double> _GIASIZE;
		
		private EntityRef<KICHTHUOC> _KICHTHUOC;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    partial void OnMAKICHTHUOCChanging(int value);
    partial void OnMAKICHTHUOCChanged();
    partial void OnGIASIZEChanging(System.Nullable<double> value);
    partial void OnGIASIZEChanged();
    #endregion
		
		public SANPHAMKICHTHUOC()
		{
			this._KICHTHUOC = default(EntityRef<KICHTHUOC>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKICHTHUOC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAKICHTHUOC
		{
			get
			{
				return this._MAKICHTHUOC;
			}
			set
			{
				if ((this._MAKICHTHUOC != value))
				{
					if (this._KICHTHUOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKICHTHUOCChanging(value);
					this.SendPropertyChanging();
					this._MAKICHTHUOC = value;
					this.SendPropertyChanged("MAKICHTHUOC");
					this.OnMAKICHTHUOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIASIZE", DbType="Float")]
		public System.Nullable<double> GIASIZE
		{
			get
			{
				return this._GIASIZE;
			}
			set
			{
				if ((this._GIASIZE != value))
				{
					this.OnGIASIZEChanging(value);
					this.SendPropertyChanging();
					this._GIASIZE = value;
					this.SendPropertyChanged("GIASIZE");
					this.OnGIASIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KICHTHUOC_SANPHAMKICHTHUOC", Storage="_KICHTHUOC", ThisKey="MAKICHTHUOC", OtherKey="MAKICHTHUOC", IsForeignKey=true)]
		public KICHTHUOC KICHTHUOC
		{
			get
			{
				return this._KICHTHUOC.Entity;
			}
			set
			{
				KICHTHUOC previousValue = this._KICHTHUOC.Entity;
				if (((previousValue != value) 
							|| (this._KICHTHUOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KICHTHUOC.Entity = null;
						previousValue.SANPHAMKICHTHUOCs.Remove(this);
					}
					this._KICHTHUOC.Entity = value;
					if ((value != null))
					{
						value.SANPHAMKICHTHUOCs.Add(this);
						this._MAKICHTHUOC = value.MAKICHTHUOC;
					}
					else
					{
						this._MAKICHTHUOC = default(int);
					}
					this.SendPropertyChanged("KICHTHUOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_SANPHAMKICHTHUOC", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.SANPHAMKICHTHUOCs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.SANPHAMKICHTHUOCs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
